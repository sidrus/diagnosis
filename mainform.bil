;;; Define :mainform
 
(in-package :common-graphics-user)

;; The finder-function, which returns the window if it already
;; exists, and otherwise creates and returns it.
;; Call this function if you need only one copy of this window,
;; and that window is a non-owned top-level window.
(defun mainform ()
  (find-or-make-application-window :mainform 'make-mainform))
 
;; The maker-function, which always creates a new window.
;; Call this function if you need more than one copy,
;; or the single copy should have a parent or owner window.
;; (Pass :owner to this function; :parent is for compatibility.)
(defun make-mainform
    (&key parent (owner (or parent (screen *system*))) exterior
     (interior (make-box 674 119 1158 581)) (name :mainform)
     (title "Mainform") (border :frame) (child-p nil) form-p)
  (let ((owner
         (make-window name :owner owner
           :class 'frame-window
           :exterior exterior
           :interior interior
           :border border
           :child-p child-p
           :close-button t
           :font (make-font-ex :swiss "Arial / ANSI" 12)
           :form-state :normal
           :maximize-button t
           :minimize-button t
           :name :mainform
           :pop-up nil
           :resizable t
           :scrollbars nil
           :state :normal
           :system-menu t
           :title title
           :title-bar t
           :dialog-items (make-mainform-widgets)
           :form-p form-p
           :form-package-name nil)))
    owner))

(defun make-mainform-widgets ()
  (list (make-instance 'button :font
                       (make-font-ex nil "Segoe UI / Default" 12) :left
                       8 :name :cmdtest :on-click
                       'mainform-cmdtest-on-click :title "Test" :top
                       18)
        (make-instance 'scrolling-static-text :font
                       (make-font-ex nil "Segoe UI / Default" 12)
                       :height 379 :left 16 :name :txtbox :top 68
                       :value "" :width 454)))
