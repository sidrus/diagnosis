<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YJ6afTSnDl+WhC+6EI0IRoQjQhf/2Q==
</value>
  </data>
</root>